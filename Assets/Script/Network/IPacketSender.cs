using System;

public interface IPacketSender
{
    ClientConnector Connector { get; set; }
    void RequestCheckNickName(string nickName);
    void RequestCreateNickName(string nickName);
    void RequestInviteFriendByKatalk(string Nick);
    void RequestInviteFriendByNick(string nickName);
    void RequestSignup(string id, string pass1, string pass2);
    void SendAchievementProcess(global::System.Collections.Generic.List<Achievement> achievementList);
    void SendBossRaidEnd(long bossIndex, float damageValue, bool isPhase2, int curHP, string platform = "", string owner_id = "", int boss_id = 0);
    void SendBuyCashItem(int ItemID);
    void SendChangeGambleItem(int index, Item newItem);
    void SendDailyAchievementProcess(global::System.Collections.Generic.List<Achievement> achievementList);
    void SendGMCheat(GMCMD cmd, int Value);
    void SendIgnorePush(bool bToggle);
    void SendKeepAlive();
    void SendLogin(string Account, string password, AccountType accountType);
	void SendKakaoLogin(string userId);
	void UpdateKakaoFriends(string[] friends_user_ids);
    void SendPopupNoticeIgnore(long noticeID);
    void SendPreLogin();
    void SendRecoveryStamina(int CharacterIndex, int[] SelectedBuffs, int SeletedTower, bool Start, bool isWaveMode, int buyPotion1, int buyPotion2);
    void SendRecoveryStaminaByBossRaidStart(long bossIndex, string platform = "", string owner_id = "");
    void SendRecoveryStaminaByStage(int charIndex, int[] selectedBuffs, int stageIndex, int stageType, int buyPotion1, int buyPotion2);
    void SendRefreshGambleItems(bool ByCash, int CharacterIndex, ref global::System.Collections.Generic.List<Item> Items);
    void SendRegisterGCMID();
    void SendRequestAcceptAchieveReward(int id, int step, int achieveCharIndex);
    void SendRequestAcceptDailyAchieveReward(int id, int step);
    void SendRequestAcceptFriend(long targetUserID, string platform = "kakao");
    void SendRequestAcceptSpecialAchieveReward(int id, int step, int charIndex);
    void SendRequestArenaEnd(bool bWin, long targetUserIndex, int targetCharIndex, string platform = "kakao");
    void SendRequestArenaInfo();
    void SendRequestArenaRanking(int rankType, int rank, bool bDown);
    void SendRequestArenaStart(bool recovery = false);
    void SendRequestArenaStartBuyTicket();
    void SendRequestAwakeningBuyPoint(int buyCount);
    void SendRequestAwakeningReset();
    void SendRequestAwakeningUpgrade(SkillUpgradeDBInfo info);
    void SendRequestBossRaidEnter();
    void SendRequestBossRaidStart(long bossIndex, bool recovery = false, string platform = "", string owner_id = "");
    void SendRequestBuyCashItem(CashItemInfo info);
    void SendRequestBuyCashItemNotify(CashItemInfo info);
    void SendRequestBuyCostumeItem(int ItemID, int slotIndex);
    void SendRequestBuyCostumeSetItem(int itemID, int slotIndex);
    void SendRequestBuyArtifactItem(int ItemID, int buyCount, int slotIndex, GameDef.eItemSlotWindow window);
    void SendRequestBuyNormalItem(int ItemID, int buyCount, int slotIndex, GameDef.eItemSlotWindow window);
    void SendRequestCompositionItem(int slotIndex, GameDef.eItemSlotWindow slotWindow, string UID, int ItemID, string composMaterialUID, string composAddMaterialUID, bool bCash, bool isTutorial);
    void SendRequestCoupon(string couponNumber);
    void SendRequestDeleteFriend(long targetUserID, string platform = "kakao");
    void SendRequestDoEquipCostumeItem(int equipSlotIndex, int slotIndex, int ItemID, string UID);
    void SendRequestDoEquipCostumeSetItem(int invenSlotIndex, int itemID, string UID, GameDef.eItemSlotWindow slotWindow);
    void SendRequestDoEquipItem(int equipSlotIndex, int InvenSlotIndex, int ItemID, string UID, GameDef.eItemSlotWindow slotWindow);
    void SendRequestDoUnEquipCostume(int slotIndex, string UID, int ItemID);
    void SendRequestDoUnEquipCostumeSetItem(string UID, int itemID);
    void SendRequestDoUnEquipItem(int slotIndex, string UID, int ItemID);
    void SendRequestEnterTown();
    void SendRequestExpandSlots(GameDef.eItemSlotWindow slotWindow);
    void SendRequestFriendFunc(BaseFriendListWindow.eFriendListType listType, FriendSimpleInfo info);
    void SendRequestFriendList(BaseFriendListWindow.eFriendListType listType);
    void SendRequestGambleInfo();
    void SendRequestGameReview();
    void SendRequestInviteFriend(long targetUserID, string platform = "kakao");
    void SendRequestMasteryReset();
    void SendRequestMasteryUpgrade(SkillUpgradeDBInfo info);
    void SendRequestMemberSecession(string accountStr, string passStr, AccountType type);
    void SendRequestPostInfo(string id = "-1");
    void SendRequestPostItem(MailInfo info);
    void SendRequestPostItemAll();
    void SendRequestPostMessage(MailInfo info);
    void SendRequestReinforceItem(int slotIndex, GameDef.eItemSlotWindow slotWindow, string UID, int ItemID, string[] delItems);
    void SendRequestRevival(int gold, int cash);
    void SendRequestSellCostumeItem(int charIndex, int slotIndex, int ItemID, string ItemUID);
    void SendRequestSellCostumeItemFromStorage(int charIndex, int slotIndex, int ItemID, string ItemUID);
    void SendRequestSellCostumeSetItemFromStorage(int charIndex, int slotIndex, int ItemID, string ItemUID);
    void SendRequestSellEquipItem(int charIndex, int slotIndex, int ItemID, string ItemUID);
    void SendRequestSellEquipItemFromStorage(int charIndex, int slotIndex, int ItemID, string ItemUID);
    void SendRequestSellMaterialItemFromStorage(int charIndex, int slotIndex, int ItemID, string ItemUID);
    void SendRequestSellNormalItemFromStorage(int charIndex, int slotIndex, int ItemID, string ItemUID);
    void SendRequestSendStamina(long targetUserID, string platform = "kakao", string nick = "");
    void SendRequestServerChecking(string cookie);
    void SendRequestTargetEquipItem(long targetUserIndexID, int targetCharIndex, string platform = "kakao");
    void SendRequestWaveContinue();
    void SendRequestWaveInfo();
    void SendRequestWaveRanking(int ranking, bool bDown);
    void SendResponeBuyCashItem(TStoreCashItemInfo info);
    void SendResponeBuyCashItemFailed(TStoreCashItemInfo info);
    void SendSelectGambleItem(int CharacterIndex, int gambleType, int again);
    void SendSpecialAchievementProcess(global::System.Collections.Generic.List<Achievement> achievementList);
    void SendStageEnd(int CharacterIndex, int curLevel, int gainGold, int gainCash, GainItemInfo[] gainItems, GainItemInfo[] gainMaterialItems, int usedPotion1, int usedPotion2);
    void SendStageEndFailed(int CharacterIndex, int usedPotion1, int usedPotion2);
    void SendStageReward(int CharacterIndex, int stageType, int stageIndex, int price);
	void SendStageStart(int CharacterIndex, int stageType, int stageIndex, int[] selectedBuffs, int curStamina, int buyPotion1, int buyPotion2);
    void SendTownTutorialEnd(int charIndex);
    void SendTutorialEnd(int charIndex);
    void SendUpdateStamina(int curStamina);
    void SendWaveEnd(int CharacterIndex, int WaveStep, int DurationSec, int isClear, int usedPotion1, int usedPotion2);
    void SendWaveStartOrContinue(int CharacterIndex, int[] SelectedBuffs, int SeletedTowner, int curStamina, bool Start, int buyPotion1, int buyPotion2);
	void SendRequsetInviteKakaoFriendByUserID(string user_id);
	void SendProfileImageOnOff(bool bToggle);
	void GetKakaoInfo();
	void SendStaminaForAll();
    void SelectHero(int hero_type);
	void CheckNickName();
	void GetUserInfo();
	void TimeOutProcess(string functionName, string jsonString);
	void SendUpdateFailedKakaoFriends(string jsonString);
}
